{"version":3,"sources":["components/Navigation.js","components/Dashboard.js","redux/types.js","redux/actions.js","components/Login.js","components/Recipe.js","components/Search.js","components/SignUp.js","Router.js","redux/reducers.js","redux/store.js","App.js","serviceWorker.js","index.js","recipe.module.css"],"names":["Navigation","state","isLoggedIn","setInterval","cookie","parse","document","loggedIn","setState","Container","AppBar","position","Toolbar","Typography","variant","style","flexGrow","className","Button","color","to","this","onClick","Component","useStyles","makeStyles","bold","fontWeight","underline","textDecoration","Dashboard","classes","maxWidth","Table","TableHead","TableRow","TableCell","ACTION_TYPE","SIGNUP_LOADING","SIGNUP_SUCCESS","SIGNUP_FAILURE","SIGNUP_ASYNC","SET_LOGIN_STATE","LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_ASYNC","signUpSuccess","type","signUpFailure","err","loginSuccess","res","console","log","localStorage","setItem","data","token","msg","loginFailure","Login","username","password","redirectHome","handleTextChange","e","target","name","value","login","a","preventDefault","axios","post","then","prevProps","prevState","loginLoading","props","history","push","Grid","container","spacing","direction","justify","alignItems","onSubmit","item","TextField","required","onChange","label","fullWidth","connect","dispatch","catch","Recipe","title","ingredients","image","link","recipe","map","ingredient","text","src","alt","href","Search","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","fetch","response","json","hits","key","url","SignUp","signup","signUp","ProtectedRoute","component","rest","render","exact","path","Signup","combineReducers","action","ACTION_TYPES","listing","splice","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","App","store","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.78237c9f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { AppBar, Toolbar, Container, Typography } from '@material-ui/core'\r\nimport cookie from 'cookie'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass Navigation extends Component {\r\n  \r\n  state = {\r\n    isLoggedIn: false\r\n  }\r\n  componentDidMount() {\r\n    setInterval(()=> {\r\n      const cookies = cookie.parse(document.cookie)\r\n    if (cookies.loggedIn ==='true') {\r\n\r\n      this.setState ({isLoggedIn: true})\r\n    } else {\r\n      this.setState ({isLoggedIn: false})\r\n    }\r\n    }, 250)\r\n  }\r\n  // componentDidUpdate() {\r\n  //   console.log('isLoggedIn', this.state.isLoggedIn)\r\n  // }\r\n\r\n  \r\nrender() {\r\n  const cookies = cookie.parse(document.cookie)\r\n    return (\r\n      \r\n    <Container>\r\n        <AppBar position=\"relative\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" style={{ flexGrow: \"1\" }}>\r\n                   Recipe Finder\r\n                </Typography>\r\n                <ul className=\"nav-list\">\r\n                        <Button color='inherit'><Link to=\"/SignUp\">SignUp</Link></Button>\r\n                        <Button color='inherit'><Link to=\"/Search\">Search</Link></Button>\r\n                        {!this.state.isLoggedIn &&(<Button color='inherit'><Link to=\"/Login\">Login</Link></Button>)}\r\n                    {this.state.isLoggedIn && (\r\n        <div>\r\n        \r\n          <Button\r\n            color='inherit' \r\n            >\r\n            <Link to=\"/Dashboard\">Dashboard</Link>\r\n\r\n          </Button>\r\n          <Link to=\"/Login\"><Button\r\n            color='inherit'\r\n            onClick={() => {\r\n              document.cookie = \"loggedIn=\";\r\n            }}\r\n          >\r\n            Log Out\r\n          </Button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n                </ul>\r\n            </Toolbar>\r\n        </AppBar>\r\n            \r\n    </Container>\r\n    )\r\n    }\r\n}\r\n  \r\n  export default Navigation;","import React from 'react'\r\nimport {\r\n    Container,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//const cookies = cookie.parse(document.cookie)\r\n\r\nconst useStyles = makeStyles({\r\n  bold: {\r\n    fontWeight: '600',\r\n  },\r\n  underline: {\r\n    fontWeight: '800',\r\n    textDecoration: 'underline'\r\n  }\r\n});\r\n\r\nconst Dashboard = () => {\r\n\r\nconst classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className=\"car-container\">\r\n            <div className=\"flex-container\">\r\n            </div>\r\n            <Table>\t\r\n                <TableHead>\t\r\n                    <TableRow className={classes.bold}>\t\r\n                        <TableCell>Recipe Name</TableCell>\t\r\n                        <TableCell>Rating</TableCell>\t\r\n                    </TableRow>\t\r\n                </TableHead>\t\r\n            </Table>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard","const ACTION_TYPE = {\r\n    SIGNUP_LOADING: 'SIGNUP_LOADING',\r\n    SIGNUP_SUCCESS: 'SIGNUP_SUCCESS',\r\n    SIGNUP_FAILURE: 'SIGNUP_FAILURE',\r\n    SIGNUP_ASYNC: 'SIGNUP_ASYNC',\r\n    SET_LOGIN_STATE :\"SET_LOGIN_STATE\",\r\n    LOGIN_LOADING: 'LOGIN_LOADING',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGIN_ASYNC: 'LOGIN_ASYNC',\r\n  };\r\n  \r\n  export default ACTION_TYPE;","import ACTION_TYPE from './types';\r\nimport axios from 'axios';\r\n\r\nexport const signUp = (data) => {\r\n  console.log('data:', data);\r\n  return function (dispatch) {\r\n    axios\r\n      .post('/auth/signup', {\r\n        username: data.username,\r\n        password: data.password\r\n      })\r\n      .then(() => dispatch(signUpSuccess()))\r\n      .catch((err) => {\r\n        dispatch(signUpFailure(err));\r\n      });\r\n  };\r\n};\r\n\r\nconst signUpSuccess = () => {\r\n  return {\r\n    type: ACTION_TYPE.SIGNUP_SUCCESS,\r\n  };\r\n};\r\n\r\nconst signUpFailure = (err) => {\r\n  return {\r\n    type: ACTION_TYPE.SIGNUP_FAILURE,\r\n    err,\r\n  };\r\n};\r\n\r\nexport const login = (data) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .post('/auth/login', {\r\n        username: data.username,\r\n        password: data.password,\r\n      })\r\n      .then((res) =>\r\n       dispatch(loginSuccess(res)))\r\n      .catch((err) => {\r\n        dispatch(loginFailure(err));\r\n      });\r\n  };\r\n};\r\n\r\nconst loginSuccess = (res) => {\r\n  console.log('res :', res);\r\n  localStorage.setItem('token', res.data.token);\r\n  return {\r\n    type: ACTION_TYPE.LOGIN_SUCCESS,\r\n    msg: 'login success',\r\n  };\r\n};\r\n\r\nconst loginFailure = (err) => {\r\n  return {\r\n    type: ACTION_TYPE.LOGIN_FAILURE,\r\n    err,\r\n  };\r\n};","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../redux/actions';\r\nimport axios from 'axios';\r\n  \r\n  class Login extends Component {\r\n      state = {\r\n          username: '',\r\n          password: '',\r\n          redirectHome: null\r\n        }\r\n\r\n        componentDidUpdate(prevProps, prevState) {\r\n          if (prevProps.loginLoading && !this.props.loginLoading) {\r\n            if (this.props.msg) {\r\n              // trigger re render with History\r\n              this.props.history.push('/Dashboard');\r\n            }\r\n          }\r\n        }\r\n        \r\n        handleTextChange = (e) => {\r\n            const state = { ...this.state }\r\n            state[e.target.name] = e.target.value\r\n            this.setState(state)\r\n        }\r\n        \r\n        login = async (e)  => {\r\n            e.preventDefault()\r\n            await axios.post(\"/auth/login\", {username: this.state.username, password: this.state.password}).then(res => {\r\n              document.cookie = \"loggedIn=true\"\r\n              \r\n            })\r\n            this.setState({\r\n              redirectHome: true\r\n            })\r\n        }\r\n        \r\n        // this.state.redirectHome {\r\n        //   return <Redirect to=\"/Search\"/>\r\n        // }\r\n        render() {\r\n          \r\n            return (\r\n                <div className=\"App\">\r\n                    <Container maxWidth='sm'>\r\n                    <br/>\r\n\r\n        <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        >\r\n\r\n          <form className=\"login-form\" onSubmit={this.login}>\r\n            <Grid item>\r\n            <TextField\r\n              required\r\n              onChange={this.handleTextChange}\r\n              value={this.state.username}\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              type=\"text\" />\r\n              </Grid>\r\n              <Grid item>\r\n            <TextField\r\n              required\r\n              onChange={this.handleTextChange}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\" />\r\n              </Grid>\r\n            <Grid item>\r\n            <br/>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"login-button\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n              color=\"default\">Login</Button>\r\n              </Grid>\r\n          </form>\r\n              </Grid>\r\n              </Container>\r\n              { this.state.redirectHome && <Redirect to=\"/Search\"/>}\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (data) => {\r\n      dispatch(login(data));\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Login);","import React from 'react';\r\nimport style from '../recipe.module.css'\r\n\r\nfunction Recipe({ title, ingredients, image, link }) {\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>{ingredients.map(ingredient => (\r\n                <li>{ingredient.text}</li>\r\n            ))}</ol>\r\n            <img src={image} alt=\"\" />\r\n            <a href={link}>Instructions for the Recipe!</a>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Recipe;","import React, {useEffect, useState} from 'react'\r\nimport Recipe from './Recipe'\r\n\r\n\r\nconst Search= () => {\r\n\r\n  const APP_ID = \"c16efc0d\";\r\n  const APP_KEY = \"59bd419dcec835f30bc4b53ddd8428eb\";\r\n  \r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [query, setQuery] = useState(' ')\r\n  \r\n  useEffect( () => {\r\n    getRecipes();\r\n    \r\n  }, [query]);\r\n  \r\n    const getRecipes = async () => {\r\n      const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\r\n      const data = await response.json();\r\n      setRecipes(data.hits);\r\n      console.log(data.hits);\r\n    }\r\n  \r\n    const updateSearch = e => {\r\n      setSearch(e.target.value);\r\n    };\r\n  \r\n    const getSearch = e => {\r\n      e.preventDefault();\r\n      setQuery(search);\r\n      setSearch(' ')\r\n    }\r\n  \r\n    return <div className=\"App\">\r\n      <form onSubmit={getSearch} className='search-form'>\r\n        <input className='search-bar' type='text' value={search} onChange={updateSearch}/>\r\n        <button className='search-button' type='submit'>\r\n          Search\r\n        </button>\r\n        \r\n      </form>\r\n      <div className='recipes'>\r\n      {recipes.map(recipe => (\r\n        <Recipe \r\n        key= {recipe.recipe.label}\r\n        title={recipe.recipe.label}\r\n        ingredients={recipe.recipe.ingredients}\r\n        image={recipe.recipe.image}\r\n        link={recipe.recipe.url} />\r\n      ))}\r\n      </div>\r\n  </div>\r\n    };\r\n    \r\n\r\n    export default Search;","import React, { Component } from 'react'\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../redux/actions';\r\n  \r\n  class SignUp extends Component {\r\n      state = {\r\n          username: '',\r\n          password: '',\r\n        }\r\n        \r\n        handleTextChange = (e) => {\r\n            const state = { ...this.state }\r\n            state[e.target.name] = e.target.value\r\n            this.setState(state)\r\n        }\r\n        \r\n        signup = (e) => {\r\n            e.preventDefault()\r\n            this.props.signUp(this.state);\r\n            \r\n        }\r\n        \r\n        render() {\r\n            return (\r\n                <div className=\"App\">\r\n                    <Container maxWidth='sm'>\r\n                    <br/>\r\n\r\n        <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        >\r\n\r\n          <form className=\"login-form\" onSubmit={this.signup}>\r\n            <Grid item>\r\n            <TextField\r\n              required\r\n              onChange={this.handleTextChange}\r\n              value={this.state.username}\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              type=\"text\" />\r\n              </Grid>\r\n              <Grid item>\r\n            <TextField\r\n              required\r\n              onChange={this.handleTextChange}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\" />\r\n              </Grid>\r\n            <Grid item>\r\n            <br/>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"login-button\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n              color=\"default\">SignUp</Button>\r\n              </Grid>\r\n          </form>\r\n              </Grid>\r\n              </Container>\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (data) => {\r\n      dispatch(signUp(data));\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(SignUp)","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router'\r\nimport Dashboard from './components/Dashboard'\r\nimport Login from './components/Login'\r\nimport Search from './components/Search'\r\nimport Signup from './components/SignUp'\r\nimport {connect} from 'react-redux'\r\nimport cookie from 'cookie'\r\n\r\nconst checkAuth = () => {\r\n  const cookies = cookie.parse(document.cookie)\r\n  return cookies.loggedIn ==='true'\r\n}\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          checkAuth() ? <Component {...props} /> : <Redirect to=\"/Login\" />\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\nconst Router = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route path=\"/SignUp\" component={Signup} />\r\n            <Route path=\"/Login\" component={Login} />\r\n            <Route path=\"/Search\" component={Search} />\r\n            <ProtectedRoute exact path=\"/Dashboard\" component={Dashboard} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('state :', state);\r\n    return {\r\n      loggedIn: state.loggedIn,\r\n    };\r\n  };\r\n  export default connect(mapStateToProps, null)(Router);","import { combineReducers } from 'redux';\r\nimport ACTION_TYPES from './types';\r\n\r\nconst loggedIn = (state = '', action) => {\r\n  console.log('action : ', action);\r\n  switch (action.type) {\r\n    case ACTION_TYPES.LOGIN_SUCCESS:\r\n      return action.msg;\r\n    case 'REMOVE_LISTING':\r\n      let listing = [...state];\r\n      listing.splice(action.value, 1);\r\n      return listing;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ loggedIn });","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);","import React from 'react'\nimport Navigation from './components/Navigation'\nimport './App.css'\nimport Router from './Router'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Navigation />\n        <Router />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2Daw4\"};"],"sourceRoot":""}